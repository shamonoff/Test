package oracle.fodemo.storefront.store.queries;

import oracle.fodemo.storefront.entities.AddressEOImpl;
import oracle.fodemo.storefront.entities.AddressUsageEOImpl;


import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.RowCreateException;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AddressesAndUsagesVORowImpl extends ViewRowImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OwnerTypeCode {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getOwnerTypeCode();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setOwnerTypeCode((String)value);
            }
        }
        ,
        AddressId {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddressId();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddressId((Number)value);
            }
        }
        ,
        UsageTypeCode {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getUsageTypeCode();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setUsageTypeCode((String)value);
            }
        }
        ,
        AssociatedOwnerId {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAssociatedOwnerId();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAssociatedOwnerId((Number)value);
            }
        }
        ,
        ExpiredFlag {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getExpiredFlag();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setExpiredFlag((String)value);
            }
        }
        ,
        AddressUsagesId {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddressUsagesId();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddressUsagesId((DBSequence)value);
            }
        }
        ,
        AddressId1 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddressId1();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddressId1((DBSequence)value);
            }
        }
        ,
        Address1 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddress1();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddress1((String)value);
            }
        }
        ,
        Address2 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddress2();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddress2((String)value);
            }
        }
        ,
        City {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getCity();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setCity((String)value);
            }
        }
        ,
        PostalCode {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getPostalCode();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setPostalCode((String)value);
            }
        }
        ,
        StateProvince {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getStateProvince();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setStateProvince((String)value);
            }
        }
        ,
        CountryId {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getCountryId();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setCountryId((String)value);
            }
        }
        ,
        Longitude {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLongitude();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLongitude((Number)value);
            }
        }
        ,
        Latitude {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLatitude();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLatitude((Number)value);
            }
        }
        ,
        AddressLabel {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getAddressLabel();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setAddressLabel((String)value);
            }
        }
        ,
        CountryName {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getCountryName();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setCountryName((String)value);
            }
        }
        ,
        ObjectVersionId {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getObjectVersionId();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setObjectVersionId((Number)value);
            }
        }
        ,
        IsoCountryCode {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getIsoCountryCode();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setIsoCountryCode((String)value);
            }
        }
        ,
        ObjectVersionId1 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getObjectVersionId1();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setObjectVersionId1((Number)value);
            }
        }
        ,
        Language {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLanguage();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLanguage((String)value);
            }
        }
        ,
        ObjectVersionId2 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getObjectVersionId2();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setObjectVersionId2((Number)value);
            }
        }
        ,
        Language1 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLanguage1();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLanguage1((String)value);
            }
        }
        ,
        LookupType {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLookupType();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLookupType((String)value);
            }
        }
        ,
        LookupCode {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getLookupCode();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setLookupCode((String)value);
            }
        }
        ,
        Meaning {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getMeaning();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setMeaning((String)value);
            }
        }
        ,
        ObjectVersionId3 {
            public Object get(AddressesAndUsagesVORowImpl obj) {
                return obj.getObjectVersionId3();
            }

            public void put(AddressesAndUsagesVORowImpl obj, Object value) {
                obj.setObjectVersionId3((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        /**
         * @param object
         * @return
         */
        public abstract Object get(AddressesAndUsagesVORowImpl object);

        /**
         * @param object
         * @param value
         */
        public abstract void put(AddressesAndUsagesVORowImpl object,
                                 Object value);

        /**
         * @return
         */
        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        /**
         * @return
         */
        public static int firstIndex() {
            return firstIndex;
        }

        /**
         * @return
         */
        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        /**
         * @return
         */
        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int OWNERTYPECODE = AttributesEnum.OwnerTypeCode.index();
    public static final int ADDRESSID = AttributesEnum.AddressId.index();
    public static final int USAGETYPECODE = AttributesEnum.UsageTypeCode.index();
    public static final int ASSOCIATEDOWNERID = AttributesEnum.AssociatedOwnerId.index();
    public static final int EXPIREDFLAG = AttributesEnum.ExpiredFlag.index();
    public static final int ADDRESSUSAGESID = AttributesEnum.AddressUsagesId.index();
    public static final int ADDRESSID1 = AttributesEnum.AddressId1.index();
    public static final int ADDRESS1 = AttributesEnum.Address1.index();
    public static final int ADDRESS2 = AttributesEnum.Address2.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int POSTALCODE = AttributesEnum.PostalCode.index();
    public static final int STATEPROVINCE = AttributesEnum.StateProvince.index();
    public static final int COUNTRYID = AttributesEnum.CountryId.index();
    public static final int LONGITUDE = AttributesEnum.Longitude.index();
    public static final int LATITUDE = AttributesEnum.Latitude.index();
    public static final int ADDRESSLABEL = AttributesEnum.AddressLabel.index();
    public static final int COUNTRYNAME = AttributesEnum.CountryName.index();
    public static final int OBJECTVERSIONID = AttributesEnum.ObjectVersionId.index();
    public static final int ISOCOUNTRYCODE = AttributesEnum.IsoCountryCode.index();
    public static final int OBJECTVERSIONID1 = AttributesEnum.ObjectVersionId1.index();
    public static final int LANGUAGE = AttributesEnum.Language.index();
    public static final int OBJECTVERSIONID2 = AttributesEnum.ObjectVersionId2.index();
    public static final int LANGUAGE1 = AttributesEnum.Language1.index();
    public static final int LOOKUPTYPE = AttributesEnum.LookupType.index();
    public static final int LOOKUPCODE = AttributesEnum.LookupCode.index();
    public static final int MEANING = AttributesEnum.Meaning.index();
    public static final int OBJECTVERSIONID3 = AttributesEnum.ObjectVersionId3.index();

    /**This is the default constructor (do not remove).
     */
    public AddressesAndUsagesVORowImpl() {
    }

    /**Gets AddressUsageEO entity object.
     * @return
     */
    public AddressUsageEOImpl getAddressUsageEO() {
        return (AddressUsageEOImpl)getEntity(0);
    }

    /**Gets AddressEO entity object.
     * @return
     */
    public AddressEOImpl getAddressEO() {
        return (AddressEOImpl)getEntity(1);
    }

    /**Gets the attribute value for ADDRESS_USAGES_ID using the alias name AddressUsagesId.
     * @return
     */
    public DBSequence getAddressUsagesId() {
        return (DBSequence)getAttributeInternal(ADDRESSUSAGESID);
    }

    /**Sets <code>value</code> as attribute value for ADDRESS_USAGES_ID using the alias name AddressUsagesId.
     * @param value
     */
    public void setAddressUsagesId(DBSequence value) {
        setAttributeInternal(ADDRESSUSAGESID, value);
    }

    /**Gets the attribute value for ASSOCIATED_OWNER_ID using the alias name AssociatedOwnerId.
     * @return
     */
    public Number getAssociatedOwnerId() {
        return (Number) getAttributeInternal(ASSOCIATEDOWNERID);
    }

    /**Sets <code>value</code> as attribute value for ASSOCIATED_OWNER_ID using the alias name AssociatedOwnerId.
     * @param value
     */
    public void setAssociatedOwnerId(Number value) {
        setAttributeInternal(ASSOCIATEDOWNERID, value);
    }

    /**Gets the attribute value for OWNER_TYPE_CODE using the alias name OwnerTypeCode.
     * @return
     */
    public String getOwnerTypeCode() {
        return (String) getAttributeInternal(OWNERTYPECODE);
    }

    /**Sets <code>value</code> as attribute value for OWNER_TYPE_CODE using the alias name OwnerTypeCode.
     * @param value
     */
    public void setOwnerTypeCode(String value) {
        setAttributeInternal(OWNERTYPECODE, value);
    }

    /**Gets the attribute value for ADDRESS_ID using the alias name AddressId.
     * @return
     */
    public Number getAddressId() {
        return (Number) getAttributeInternal(ADDRESSID);
    }

    /**Sets <code>value</code> as attribute value for ADDRESS_ID using the alias name AddressId.
     * @param value
     */
    public void setAddressId(Number value) {
        setAttributeInternal(ADDRESSID, value);
    }

    /**Gets the attribute value for USAGE_TYPE_CODE using the alias name UsageTypeCode.
     * @return
     */
    public String getUsageTypeCode() {
        return (String) getAttributeInternal(USAGETYPECODE);
    }

    /**Sets <code>value</code> as attribute value for USAGE_TYPE_CODE using the alias name UsageTypeCode.
     * @param value
     */
    public void setUsageTypeCode(String value) {
        setAttributeInternal(USAGETYPECODE, value);
    }

    /**Gets the attribute value for EXPIRED_FLAG using the alias name ExpiredFlag.
     * @return
     */
    public String getExpiredFlag() {
        return (String) getAttributeInternal(EXPIREDFLAG);
    }

    /**Sets <code>value</code> as attribute value for EXPIRED_FLAG using the alias name ExpiredFlag.
     * @param value
     */
    public void setExpiredFlag(String value) {
        setAttributeInternal(EXPIREDFLAG, value);
    }

    /**Gets the attribute value for ADDRESS_ID using the alias name AddressId1.
     * @return
     */
    public DBSequence getAddressId1() {
        return (DBSequence)getAttributeInternal(ADDRESSID1);
    }

    /**Sets <code>value</code> as attribute value for ADDRESS_ID using the alias name AddressId1.
     * @param value
     */
    public void setAddressId1(DBSequence value) {
        setAttributeInternal(ADDRESSID1, value);
    }

    /**Gets the attribute value for ADDRESS1 using the alias name Address1.
     * @return
     */
    public String getAddress1() {
        return (String) getAttributeInternal(ADDRESS1);
    }

    /**Sets <code>value</code> as attribute value for ADDRESS1 using the alias name Address1.
     * @param value
     */
    public void setAddress1(String value) {
        setAttributeInternal(ADDRESS1, value);
    }

    /**Gets the attribute value for ADDRESS2 using the alias name Address2.
     * @return
     */
    public String getAddress2() {
        return (String) getAttributeInternal(ADDRESS2);
    }

    /**Sets <code>value</code> as attribute value for ADDRESS2 using the alias name Address2.
     * @param value
     */
    public void setAddress2(String value) {
        setAttributeInternal(ADDRESS2, value);
    }

    /**Gets the attribute value for CITY using the alias name City.
     * @return
     */
    public String getCity() {
        return (String) getAttributeInternal(CITY);
    }

    /**Sets <code>value</code> as attribute value for CITY using the alias name City.
     * @param value
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**Gets the attribute value for POSTAL_CODE using the alias name PostalCode.
     * @return
     */
    public String getPostalCode() {
        return (String) getAttributeInternal(POSTALCODE);
    }

    /**Sets <code>value</code> as attribute value for POSTAL_CODE using the alias name PostalCode.
     * @param value
     */
    public void setPostalCode(String value) {
        setAttributeInternal(POSTALCODE, value);
    }

    /**Gets the attribute value for STATE_PROVINCE using the alias name StateProvince.
     * @return
     */
    public String getStateProvince() {
        return (String) getAttributeInternal(STATEPROVINCE);
    }

    /**Sets <code>value</code> as attribute value for STATE_PROVINCE using the alias name StateProvince.
     * @param value
     */
    public void setStateProvince(String value) {
        setAttributeInternal(STATEPROVINCE, value);
    }

    /**Gets the attribute value for COUNTRY_ID using the alias name CountryId.
     * @return
     */
    public String getCountryId() {
        return (String) getAttributeInternal(COUNTRYID);
    }

    /**Sets <code>value</code> as attribute value for COUNTRY_ID using the alias name CountryId.
     * @param value
     */
    public void setCountryId(String value) {
        setAttributeInternal(COUNTRYID, value);
    }

    /**Gets the attribute value for LONGITUDE using the alias name Longitude.
     * @return
     */
    public Number getLongitude() {
        return (Number) getAttributeInternal(LONGITUDE);
    }

    /**Sets <code>value</code> as attribute value for LONGITUDE using the alias name Longitude.
     * @param value
     */
    public void setLongitude(Number value) {
        setAttributeInternal(LONGITUDE, value);
    }

    /**Gets the attribute value for LATITUDE using the alias name Latitude.
     * @return
     */
    public Number getLatitude() {
        return (Number) getAttributeInternal(LATITUDE);
    }

    /**Sets <code>value</code> as attribute value for LATITUDE using the alias name Latitude.
     * @param value
     */
    public void setLatitude(Number value) {
        setAttributeInternal(LATITUDE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     * @param index
     * @param attrDef
     * @return
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     * @param index
     * @param value
     * @param attrDef
     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param attributeList
     */
    protected void create(AttributeList attributeList) {
        // The view row will already have created "blank" entity instances
        AddressEOImpl newAddress = this.getAddressEO();
        AddressUsageEOImpl newAddressUsage = this.getAddressUsageEO();

        try {
            // Let Address "blank" entity instance to do programmatic defaulting
            newAddress.create(attributeList);
            // Let AddressUsage "blank" entity instance to do programmatic
            // defaulting passing in new AddressesImpl instance so its attributes
            // are available to the AdressUsagesImpl's create method.
            newAddressUsage.create(newAddress);
            newAddressUsage.setAddressId(new Number((newAddress.getAddressId().getValue())));  
            // Set the entity state back to STATUS_INITIALIZED
            newAddressUsage.setNewRowState(STATUS_INITIALIZED);
            if(newAddress != null && newAddress.getAddressId() != null){
                newAddressUsage.setAddressId(newAddress.getAddressId().getSequenceNumber());
            }
        
        } catch (JboException ex) {
            newAddress.revert();
            newAddressUsage.revert();
            throw ex;
        } catch (Exception otherEx) {
            newAddress.revert();
            newAddressUsage.revert();
            throw /* EO Row? */ /* EO Name */ /* Details */new RowCreateException(true, 
                                                                                  "Addresses", 
                                                                             otherEx);
        }
    }


    /**Gets CountryCodeEO entity object.
     * @return
     */
    public EntityImpl getCountryCodeEO() {
        return (EntityImpl)getEntity(2);
    }

    /**Gets LookupCodeEO entity object.
     * @return
     */
    public EntityImpl getLookupCodeEO() {
        return (EntityImpl)getEntity(3);
    }

    /**Gets the attribute value for the calculated attribute AddressLabel.
     * @return
     */
    public String getAddressLabel() {
        return (String) getAttributeInternal(ADDRESSLABEL);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AddressLabel.
     * @param value
     */
    public void setAddressLabel(String value) {
        setAttributeInternal(ADDRESSLABEL, value);
    }

    /**Gets the attribute value for COUNTRY_NAME using the alias name CountryName.
     * @return
     */
    public String getCountryName() {
        return (String) getAttributeInternal(COUNTRYNAME);
    }

    /**Sets <code>value</code> as attribute value for COUNTRY_NAME using the alias name CountryName.
     * @param value
     */
    public void setCountryName(String value) {
        setAttributeInternal(COUNTRYNAME, value);
    }

    /**Gets the attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId.
     * @return
     */
    public Number getObjectVersionId() {
        return (Number) getAttributeInternal(OBJECTVERSIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId.
     * @param value value to set the OBJECT_VERSION_ID
     */
    public void setObjectVersionId(Number value) {
        setAttributeInternal(OBJECTVERSIONID, value);
    }

    /**Gets the attribute value for ISO_COUNTRY_CODE using the alias name IsoCountryCode.
     * @return
     */
    public String getIsoCountryCode() {
        return (String) getAttributeInternal(ISOCOUNTRYCODE);
    }

    /**Sets <code>value</code> as attribute value for ISO_COUNTRY_CODE using the alias name IsoCountryCode.
     * @param value
     */
    public void setIsoCountryCode(String value) {
        setAttributeInternal(ISOCOUNTRYCODE, value);
    }

    /**Gets the attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId1.
     * @return
     */
    public Number getObjectVersionId1() {
        return (Number) getAttributeInternal(OBJECTVERSIONID1);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId1.
     * @param value value to set the OBJECT_VERSION_ID
     */
    public void setObjectVersionId1(Number value) {
        setAttributeInternal(OBJECTVERSIONID1, value);
    }

    /**Gets the attribute value for LANGUAGE using the alias name Language.
     * @return
     */
    public String getLanguage() {
        return (String) getAttributeInternal(LANGUAGE);
    }

    /**Sets <code>value</code> as attribute value for LANGUAGE using the alias name Language.
     * @param value
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**Gets the attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId2.
     * @return
     */
    public Number getObjectVersionId2() {
        return (Number) getAttributeInternal(OBJECTVERSIONID2);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId2.
     * @param value value to set the OBJECT_VERSION_ID
     */
    public void setObjectVersionId2(Number value) {
        setAttributeInternal(OBJECTVERSIONID2, value);
    }

    /**Gets the attribute value for LANGUAGE using the alias name Language1.
     * @return
     */
    public String getLanguage1() {
        return (String) getAttributeInternal(LANGUAGE1);
    }

    /**Sets <code>value</code> as attribute value for LANGUAGE using the alias name Language1.
     * @param value
     */
    public void setLanguage1(String value) {
        setAttributeInternal(LANGUAGE1, value);
    }

    /**Gets the attribute value for LOOKUP_TYPE using the alias name LookupType.
     * @return
     */
    public String getLookupType() {
        return (String) getAttributeInternal(LOOKUPTYPE);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_TYPE using the alias name LookupType.
     * @param value
     */
    public void setLookupType(String value) {
        setAttributeInternal(LOOKUPTYPE, value);
    }

    /**Gets the attribute value for LOOKUP_CODE using the alias name LookupCode.
     * @return
     */
    public String getLookupCode() {
        return (String) getAttributeInternal(LOOKUPCODE);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_CODE using the alias name LookupCode.
     * @param value
     */
    public void setLookupCode(String value) {
        setAttributeInternal(LOOKUPCODE, value);
    }

    /**Gets the attribute value for MEANING using the alias name Meaning.
     * @return
     */
    public String getMeaning() {
        return (String) getAttributeInternal(MEANING);
    }

    /**Sets <code>value</code> as attribute value for MEANING using the alias name Meaning.
     * @param value
     */
    public void setMeaning(String value) {
        setAttributeInternal(MEANING, value);
    }

    /**Gets the attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId3.
     * @return
     */
    public Number getObjectVersionId3() {
        return (Number) getAttributeInternal(OBJECTVERSIONID3);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_ID using the alias name ObjectVersionId3.
     * @param value value to set the OBJECT_VERSION_ID
     */
    public void setObjectVersionId3(Number value) {
        setAttributeInternal(OBJECTVERSIONID3, value);
    }
}
